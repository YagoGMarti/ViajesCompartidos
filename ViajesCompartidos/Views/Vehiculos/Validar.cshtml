@model SistemaViajesCompartidos.Models.VehiculoModel

@{
    ViewBag.Title = "Validar";
}

<h3>@ViewBag.empleado</h3>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Patente)
        @Html.HiddenFor(model => model.AsientosLibres)

        <div class="form-group">
            @Html.LabelFor(model => model.Patente, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Patente, new { disabled = "disabled", @class = "form-control text-center" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagenCarnetConducir, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @if (!String.IsNullOrWhiteSpace(Model.NombreArchivoCarnetConducir))
                {
                    <label class="control-label" for="ComprobantePolizaValidado">
                        @Model.NombreArchivoCarnetConducir
                        <button type="button" onclick="location.href='@Url.Action("AdjuntoCarnet", new { ID = Model.ID })'" style="border: 0;background: transparent;">
                            <img src="~/Content/Images/download.svg" alt="Bootstrap" width="16" height="16">
                        </button>
                    </label>
                }
                else
                {<label class="control-label"> sin adjunto </label>}
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaVencimientoCarnetConducir, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @if (Model.FechaVencimientoCarnetConducir.HasValue)
                {
                    @Html.TextBoxFor(model => model.FechaVencimientoCarnetConducir, new { @type = "date", @Value = Model.FechaVencimientoCarnetConducir.Value.ToString("yyyy-MM-dd"), @class = "form-control text-center" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.FechaVencimientoCarnetConducir, new { @type = "date", @class = "form-control text-center" })
                }
                @Html.ValidationMessageFor(model => model.FechaVencimientoCarnetConducir, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4" for="ComprobanteCarnetValidado">Validar Carnet</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.ComprobanteCarnetValidado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComprobanteCarnetValidado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagenComprobantePoliza, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @if (!String.IsNullOrWhiteSpace(Model.NombreArchivoComprobantePoliza))
                {
                    @Model.NombreArchivoComprobantePoliza
                    <button type="button" onclick="location.href='@Url.Action("AdjuntoPoliza", new { ID = Model.ID })'" style="border: 0;background: transparent;">
                        <img src="~/Content/Images/download.svg" alt="Bootstrap" width="16" height="16">
                    </button>
                }
                else
                {<label class="control-label"> sin adjunto </label>}
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaVencimientoComprobantePoliza, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @if (Model.FechaVencimientoComprobantePoliza.HasValue)
                {
                    @Html.TextBoxFor(model => model.FechaVencimientoComprobantePoliza, new { @type = "date", @Value = Model.FechaVencimientoComprobantePoliza.Value.ToString("yyyy-MM-dd"), @class = "form-control text-center" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.FechaVencimientoComprobantePoliza, new { @type = "date", @class = "form-control text-center" })
                }
                @Html.ValidationMessageFor(model => model.FechaVencimientoComprobantePoliza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4" for="ComprobantePolizaValidado">Validar Poliza</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.ComprobantePolizaValidado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComprobantePolizaValidado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaAlta, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.FechaAlta, new { disabled = "disabled", @type = "date", @Value = Model.FechaAlta.ToString("yyyy-MM-dd"), @class = "form-control text-center" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
